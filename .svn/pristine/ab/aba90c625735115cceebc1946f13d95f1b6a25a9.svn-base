<style lang='sass'>
.main-table {
    width: 85%;
    overflow: auto;
    text-align: center;
    thead th {
        background: #edf4ff;
        text-align: center;
    }
    td,
    th {
        height: 28px;
        padding: 0 10px;
        border: 1px solid #e2e7ef;
        white-space: nowrap;
    }
}
.table-striped>tbody>tr:nth-of-type(odd){
    background-color: #fff;
}.table-striped>tbody>tr:nth-of-type(even){
    background-color: #fafafa;
}
</style>
<template>
    <div>
        <div class="main-table">
            <table class="tabel table-striped">
                <thead>
                    <slot name='customizeTh'></slot>
                    <tr>
                        <th>序号</th>
                    	<th v-for='title in titles'>{{title.name}}</th>
                    </tr>
                    
                </thead>
                <tbody>
                    <tr v-for='(item, index) in list'>
                        <td>{{index + 1}}</td>
                        <td v-for='ti in titles'>{{item[ti.id]}}</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="debt-footer">
            <slot></slot>
            <pagination :cur.sync="pageInfo.pageCurr" :all.sync="pageInfo.pagesCount" @btnClick="pageBtnClick"  v-if="pageshide? 0: 1"></pagination>
        </div>
    </div>
</template>
<script>
import Util from '@/assets/libs/util';
import pagination from '@/components/pagination.vue';
// import Ajax from '@/assets/js/ajax.js';

var that = null,
    firstComponent = 0;
export default {
    props: {
        //pagesHide表示翻页是否要隐藏，默认不隐藏，1:表示隐藏，0:表示不隐藏
        pageshide:{
            type: Number,
            default: function() {
                return 0;
            }
        },
        server: {
            type: Object,
            default: function() {
                return {
                    url: '',
                    type: ''
                }
            }
        },
        pageInfo: {
            type: Object,
            default: function() {
                return {
                    pageCurr: 1,
                    pagesCount: 1
                }
            }
        },
        titles: {
            type: Array,
            default: function() {
                return []
            }
        },
        list: {
            type: Array,
            default: function() {
                return []
            }
        },
        filter: {
            type: Object,
            default: function() {
                return {}
            }
        }
    },
    methods: {
        pageBtnClick: function(pageNo) {
            this.$emit("btnClick",pageNo);
        }
    },
    components: {
        pagination
    }
}
</script>
